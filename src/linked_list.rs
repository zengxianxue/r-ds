//! [链表（Linked list）](https://zh.wikipedia.org/wiki/%E9%93%BE%E8%A1%A8)是一种线性表，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的指针(Pointer)。
//! 由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比另一种线性表顺序表快得多，
//! 但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而顺序表相应的时间复杂度分别是O(logn)和O(1)。
//!
//! ## 种类
//!
//! * 单向链表
//! * 双向链表
//! * 循环链表
//!
//! ## 特性
//!
//! * 插入、删除复杂度: O(1)
//! * 查找复杂度: O(n)
//! * 需要增加额外的指针域
//! * 不需要顺序存储
//!
//! ## 应用
//! * 链表用来构建许多其它数据结构，如堆栈，队列和他们的派生。
//! * 插入删除频繁场景
//!
//! ## 参考资料
//!
//! * [维基百科](https://zh.wikipedia.org/wiki/%E9%93%BE%E8%A1%A8)
//! * [链表——最基本的数据结构之一](https://www.cnblogs.com/heyanan/p/12799887.html)
//!
